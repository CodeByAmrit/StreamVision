<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <title><%= dvr.dvr_name %> - Live Stream</title>

    <!-- Flowbite CDN -->
    <link href="/css/style.css" rel="stylesheet" />
    <script src="/js/flowbite.min.js"></script>

    <!-- HLS.js -->
    <script
      src="https://cdn.jsdelivr.net/npm/hls.js@latest"
      nonce="<%= nonce %>"
    ></script>

    <!-- Cache control -->
    <meta
      http-equiv="Cache-Control"
      content="no-store, no-cache, must-revalidate, max-age=0"
    />
    <meta http-equiv="Pragma" content="no-cache" />
    <meta http-equiv="Expires" content="0" />
  </head>

  <body class="bg-gray-950 text-white min-h-screen flex flex-col">
    <!-- Header -->
    <header
      class="flex items-center justify-between px-4 sm:px-8 py-3 sm:py-4 bg-gray-900 shadow-md"
    >
      <!-- Left: Logo + Title -->
      <div class="flex items-center space-x-3">
        <img
          src="/images/fci.png"
          alt="Logo"
          class="h-8 w-8 sm:h-10 sm:w-10 rounded-lg shadow-md"
        />
        <div>
          <h1 class="text-lg sm:text-xl font-bold text-white leading-tight">
            <%= dvr.dvr_name %> - Live Camera Streams
          </h1>
          <p class="text-xs sm:text-sm text-gray-400">
            üìç <%= dvr.location_name %>
          </p>
        </div>
      </div>

      <!-- Desktop: Support Button -->
      <a
        href='https://service.cctvcameralive.in/'"
        class="hidden sm:flex bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-semibold px-5 py-2 rounded-xl shadow-md hover:from-blue-600 hover:to-cyan-600 transition-all duration-300 items-center space-x-2 z-50"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 text-white"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M18.364 5.636a9 9 0 11-12.728 0m6.364 4.364v4m0 4h.01"
          />
        </svg>
        <span>Support</span>
      </a>
    </header>

    <!-- Mobile: Fixed Support Button -->
    <a
      href='https://service.cctvcameralive.in/'"
      class="sm:hidden fixed bottom-0 right-0 w-full py-3 bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-semibold text-center shadow-[0_-2px_10px_rgba(0,0,0,0.3)] hover:from-blue-600 hover:to-cyan-600 transition-all duration-300 z-50"
    >
      üí¨ Support
    </a>

    <!-- Video Grid -->
    <main
      class="flex-1 p-4 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"
    >
      <% cameras.forEach((camera, index) => { %>
      <div class="relative rounded-lg overflow-hidden bg-black">
        <!-- Spinner -->
        <div
          id="spinner<%= index + 1 %>"
          role="status"
          class="flex items-center justify-center h-64"
        >
          <svg
            aria-hidden="true"
            class="w-8 h-8 mr-2 text-gray-200 animate-spin fill-blue-600"
            viewBox="0 0 100 101"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M100 50.5908C100 78.2051 77.6142 100.591 50..."
              fill="currentColor"
            />
            <path
              d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116..."
              fill="currentFill"
            />
          </svg>
          <span class="sr-only">Loading...</span>
        </div>
        <!-- Video -->
        <video
          id="video<%= index + 1 %>"
          class="hidden w-full h-auto"
          controls
          autoplay
          muted
          playsinline
        ></video>
      </div>
      <% }) %>
    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 text-center py-3 text-sm text-gray-500">
      &copy; <%= new Date().getFullYear() %> Netwon Technologies. All rights
      reserved.
    </footer>

    <!-- Client-side JS -->
    <script nonce="<%= nonce %>">
      const cameras = <%- JSON.stringify(cameras) %>;
      const dvrId = <%= dvr.id %>;
      const RETRY_INTERVAL = 2000; // 2 seconds
      const MAX_RETRIES = 5;

      function tryLoadStream(camera, index, retriesLeft = MAX_RETRIES) {
        const video = document.getElementById(`video${index + 1}`);
        const spinner = document.getElementById(`spinner${index + 1}`);
        const source = `/streams/dvr_${dvrId}/cam_${camera.id}/index.m3u8`;

        fetch(source)
          .then(response => {
            if (response.ok) {
              if (Hls.isSupported()) {
                const hls = new Hls();
                hls.loadSource(source);
                hls.attachMedia(video);
                hls.on(Hls.Events.MANIFEST_PARSED, () => {
                  spinner.classList.add('hidden');
                  video.classList.remove('hidden');
                });
              } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                video.src = source;
                video.addEventListener('loadedmetadata', () => {
                  spinner.classList.add('hidden');
                  video.classList.remove('hidden');
                });
              }
            } else {
              handleRetry();
            }
          })
          .catch(err => {
            console.error(`Error for cam ${camera.id}:`, err);
            handleRetry();
          });

        function handleRetry() {
          if (retriesLeft > 0) {
            console.warn(`Retrying cam ${camera.id} in ${RETRY_INTERVAL / 1000}s...`);
            setTimeout(() => tryLoadStream(camera, index, retriesLeft - 1), RETRY_INTERVAL);
          } else {
            spinner.innerHTML = `<p class="text-red-500 text-center">Stream not available for cam ${camera.id}</p>`;
          }
        }
      }

      function loadAllStreams() {
        cameras.forEach((camera, index) => {
          tryLoadStream(camera, index);
        });
      }

      setTimeout(() => {
        loadAllStreams();
      }, 1000);

      setInterval(() => {
        console.log("Refreshing streams...");
        loadAllStreams();
      }, 1000 * 60 * 5);
    </script>
  </body>
</html>
